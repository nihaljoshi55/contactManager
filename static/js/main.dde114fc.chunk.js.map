{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","className","name","onClick","style","cursor","float","color","bind","to","marginRight","email","phone","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","post","history","push","EditContact","match","params","updContact","put","Hearder","branding","href","PropType","string","isRequired","About","App","Header","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.dde114fc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (e) {}\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    const { contact } = this.props;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {contact.name}\n                <i\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo,\n                    });\n                  }}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\n                ></i>\n                <Link to={`/contact/edit/${contact.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{contact.email}</li>\n                  <li className=\"list-group-item\">{contact.phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {value.contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>Email</label>\n      <input\n        type={type}\n        name={name}\n        value={value}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  error: PropTypes.string,\n};\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  static defaultProps = {\n    name: \"Default Name\",\n    email: \"Default Email\",\n    phone: \"Default Phone\",\n  };\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required\" } });\n      return;\n    }\n    const contact = {\n      name,\n      email,\n      phone,\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      contact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  static defaultProps = {\n    name: \"Default Name\",\n    email: \"Default Email\",\n    phone: \"Default Phone\",\n  };\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required\" } });\n      return;\n    }\n    const { id } = this.props.match.params;\n    const updContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      errors: {},\n    });\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    placeholder=\"Enter Name...\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    value={email}\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    placeholder=\"Enter Phone...\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Hearder(props) {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i>Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\nHearder.defaultProps = {\n  branding: \"My app\",\n};\nHearder.PropType = {\n  branding: PropType.string.isRequired,\n};\nexport default Hearder;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage Contacts</p>\n      <p className=\"text-secondary\"> Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function () {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exists.</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport { Provider } from \"./context\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}